Window ModifyLocation{
    Location subject
    String text := ['Modify location']

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Label Loc_Name {
        String text := ['Enter the name of new location']
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    TextField Loc_Name_F {
        String text := [$ModifyLocation.subject$.location_name]
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Label Loc_X {
        String text := ['Enter the coordinate X of new location']
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    TextField Loc_X_F {
        String text := [$ModifyLocation.subject$.x]
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Label Loc_Y {
        String text := ['Enter the coordinate Y of new location']
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    TextField Loc_Y_F {
        String text := [$ModifyLocation.subject$.y]
    }
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    ComboBox ZoneAss {
        String text := ['Select a zone to assign']
        Set(Zone) rows := [Zone.allInstances()]

        Zone selected

        Label zoneName_L {
            String text := [$ModifyLocation.ZoneAss.row$.zone_name]
        }
    }//ZoneASS
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Button Add_B {
        String text := ['Modify location']
        
        event onClick{ //try to create new Location
            //Check name field
            if [$Loc_Name_F.text$.oclIsUndefined()] {
                Loc_Name_F.error := ['Error']
            } else {
                Loc_Name_F.error := [null]
            }
            
            //Check X field
            if [$Loc_X_F.text$.oclIsUndefined()] {
                Loc_X_F.error := ['Error']
            } else {
                Loc_X_F.error := [null]
            }
            

            //Check Y field
            if [$Loc_Y_F.text$.oclIsUndefined()] {
                Loc_Y_F.error := ['Error']
            } else {
                Loc_Y_F.error := [null]
            }
            
            //try to create new location. The first check that fields were fullfielded properly
            if [$Loc_Name_F.error$ = null and $Loc_X_F.error$ = null and $Loc_Y_F.error$ = null] {           
                //check that the location with the same zone doen not exist
                
                try {
                    if [Location.allInstances()->forAll(l|l.location_name <> $Loc_Name_F.text$)] { 
                        [$ModifyLocation.subject$.location_name] := [$Loc_Name_F.text$]
                        [$ModifyLocation.subject$.x] := [$Loc_X_F.text$]
                        [$ModifyLocation.subject$.y] := [$Loc_Y_F.text$]
                        if [$ModifyLocation.ZoneAss.selected$ <> null] {
                            [$ModifyLocation.subject$.location_zone] += [$ModifyLocation.ZoneAss.selected$]
                        }
                        
                    }
                    else { notification(['Warning'],['The Location with the same name already exists'],[1000]) }
                    notification(['Success'],['Location has been updated'],[1000])
                }//try
                catch (SecurityException) {
                        notification(["Security error"], ["You cannot modify location"], [1500])
                }


            }
            else {
                notification(['Error'],['The form contains errors. Please, check the form.'],[500]) 
            }


        }//onClick
    }//button Add_B

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Button go_back_B{
        String text := ['Go Back']
        event onClick {
            try{
                open LocationsZones(caller:[$ModifyLocation.caller$], role:[$ModifyLocation.caller$.role])
            }catch(SecurityException){
                    notification(['Error'],['Cannot perform action'],[500])
             }
        }
    }
}